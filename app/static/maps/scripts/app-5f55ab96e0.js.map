{"version":3,"sources":["scripts/app.js"],"names":["angular","module","MySidenav","SidenavController","$state","device","$rootScope","activate","getDevices","then","devices","vm","gotoDevice","key","isOpen","go","open","this","sidenav","$inject","directive","restrict","templateUrl","controller","controllerAs","bindToController","myNavbar","NavbarController","auth","status","getStatus","scope","creationDate","Device","$http","get","resp","data","getDevice","device_name","updateDevice","post","name","offDevice","animation","service","getForm","response","form","login","loggedIn","updateStatus","user","undefined","user_id","Animations","getAnimations","cache","getAnimation","animations","found","forEach","v","LoginController","$log","error","MainController","$scope","DeviceController","$stateParams","reload","off","update","update_id","current_id","updateAnimation","runBlock","defaults","headers","csrftoken","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","otherwise","config","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-5f55ab96e0.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frontend', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ngMaterial', 'toastr']);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .directive('mySidenav', MySidenav);\n\n  /** @ngInject */\n  function MySidenav() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/sidenav/sidenav.html',\n      controller: SidenavController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function SidenavController($state, device, $rootScope) {\n      var vm = this;\n      vm.gotoDevice = gotoDevice;\n      vm.devices = [];\n      vm.isOpen = true;\n      vm.open = open;\n      $rootScope.sidenav = vm;\n\n      activate();\n\n      function activate() {\n        device.getDevices().then(function (devices) {\n          vm.devices = devices;\n        });\n      }\n\n\n      function gotoDevice(key) {\n        vm.isOpen = false;\n        $state.go('device', {key: key});\n      }\n\n      function open() {\n        vm.isOpen = true;\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .directive('myNavbar', myNavbar);\n\n  /** @ngInject */\n  function myNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(auth) {\n      var vm = this;\n      vm.status= auth.getStatus();\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .service('device', Device);\n\n  /** @ngInject */\n  function Device($http) {\n    var vm = this;\n    vm.getDevices = getDevices;\n    vm.getDevice = getDevice;\n    vm.updateDevice = updateDevice;\n    vm.offDevice = offDevice;\n\n\n    function getDevices() {\n      return $http.get('/api/device').then(function (resp) {\n        return resp.data;\n      });\n    }\n\n    function getDevice(device_name) {\n      return $http.get('/api/device/' + device_name).then(function (resp) {\n        return resp.data\n      });\n    }\n\n    function updateDevice(device) {\n      return $http.post('/api/device/' + device.name, device).then(function(resp){\n        return resp.data;\n      });\n    }\n\n    function offDevice(device) {\n      device.animation = null;\n      return $http.post('/api/device/' + device.name, device).then(function(resp){\n        return resp.data;\n      });\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .service('auth', auth);\n\n  /** @ngInject */\n  function auth($http) {\n    var vm = this;\n    vm.getForm = getForm;\n    vm.login = login;\n    vm.updateStatus = updateStatus;\n    vm.getStatus = getStatus;\n    vm.status = {'loggedIn': false, 'user': null};\n\n    updateStatus();\n\n    function getForm() {\n      return $http.get('/api/login').then(function (response) {\n        return response.data.form;\n      });\n    }\n\n    function login(form) {\n      return $http.post('/api/login', form).then(function () {\n        status.loggedIn = true;\n      });\n    }\n\n    function updateStatus() {\n      return $http.get('/api/user').then(function (resp) {\n        vm.status.user = resp.data;\n        vm.status.loggedIn = resp.data.user_id != undefined;\n        return vm.status;\n      });\n    }\n\n    function getStatus() {\n      return vm.status;\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .service('animations', Animations);\n\n  /** @ngInject */\n  function Animations($http) {\n    var vm = this;\n    vm.getAnimations = getAnimations;\n    vm.getAnimation = getAnimation;\n\n\n    function getAnimations() {\n      return $http.get('/api/animation', {cache: true}).then(function (resp) {\n        return resp.data;\n      });\n    }\n\n    function getAnimation(key) {\n      return getAnimations().then(function (animations) {\n        var found= null\n        angular.forEach(animations, function (v) {\n          if (v.name == key) {\n            found= v;\n          }\n        });\n        return found;\n      });\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController($log, $state, auth) {\n    var vm = this;\n    vm.form = undefined;\n    vm.error = undefined;\n\n    vm.login = login;\n\n    activate();\n\n    function activate() {\n      auth.getForm().then(function (data) {\n        vm.form = data\n      });\n    }\n\n    function login() {\n      return auth.login(vm.form).then(function () {\n        vm.error = undefined;\n        $state.go('home');\n      }, function (data) {\n        vm.error = data.data.error;\n      });\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($rootScope,$scope, auth, device) {\n    var vm = this;\n\n    activate();\n    function activate(){\n      if($rootScope.sidenav != undefined){\n        $rootScope.sidenav.open();\n      }\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .controller('DeviceController', DeviceController);\n\n  /** @ngInject */\n  function DeviceController($stateParams, device, animations ) {\n    var vm = this;\n    vm.device = undefined;\n    vm.animations = undefined;\n    vm.animation = undefined;\n    vm.update = update;\n    vm.reload = reload;\n    vm.off = off;\n    vm.updateAnimation = updateAnimation;\n\n    activate();\n\n    function activate() {\n      vm.reload();\n      animations.getAnimations().then(function (animations) {\n        vm.animations = animations;\n      });\n    }\n\n    function reload() {\n      device.getDevice($stateParams.key).then(function (device) {\n        vm.device = device;\n          vm.animation = device.animation.name;\n      });\n    }\n\n    function off() {\n      if (vm.device != undefined) {\n        device.offDevice(vm.device).then(function (device) {\n          vm.device = device;\n          vm.animation = null;\n        });\n      }\n    }\n\n    var update_id =0; // prevent from update to old data\n    function update() {\n      update_id++;\n      var current_id =update_id;\n      if (vm.device != undefined) {\n        device.updateDevice(vm.device).then(function (device) {\n          if(update_id==current_id) {\n            vm.device = device;\n            vm.animation = device.animation.name;\n          }\n        });\n      }\n    }\n\n    function updateAnimation() {\n      if (vm.device != undefined) {\n        animations.getAnimation(vm.animation).then(function(animation){\n          vm.device.animation = animation;\n          vm.update();\n        });\n      }\n    }\n  }\n})();\n\n/* global csrftoken:'' */\n(function () {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, $http) {\n    $http.defaults.headers.post['X-CSRFToken'] = csrftoken;\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      })\n      .state('login', {\n        url: \"/login\",\n        templateUrl: \"app/login/login.html\",\n        controller: 'LoginController',\n        controllerAs: 'vm'\n      })\n      .state('device', {\n        url: \"/device/:key\",\n        templateUrl: \"app/device/device.html\",\n        controller: 'DeviceController',\n        controllerAs: 'vm'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend');\n    //.constant('malarkey', malarkey)\n    //.constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frontend')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"frontend\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/device/device.html\",\"<h1>{{ vm.device.name }}</h1><form ng-submit=vm.update()><md-input-container layout=row><md-select ng-change=vm.updateAnimation() ng-model=vm.animation><md-option ng-value=animation.name ng-repeat=\\\"animation in vm.animations\\\">{{ animation.name }}</md-option></md-select></md-input-container><md-input-container layout=row ng-repeat=\\\"(name,param) in vm.device.animation.params\\\"><lable flex=60>{{ name }}<div ng-switch=param.type><input ng-switch-when=float ng-change=vm.update() ng-model=param.value type=number min=\\\"{{ param.min }}\\\" max=\\\"{{ param.max }}\\\" step=\\\"{{ param.step }}\\\"> <input ng-switch-when=color ng-change=vm.update() ng-model=param.value type=color><md-slider ng-switch-when=range ng-model=param.value ng-change=vm.update() min=\\\"{{ param.min }}\\\" max=\\\"{{ param.max }}\\\" step=\\\"{{ param.step }}\\' ></md-slider>\\n                <input ng-switch-default=\\\" ng-change=vm.update() ng-model=param.value type=text></div></lable></md-input-container><div layout=row><md-input-container flex=20><input type=submit value=update></md-input-container><md-input-container layout=row flex=20><input ng-click=vm.off() type=button value=off></md-input-container><md-input-container layout=row flex=20><input ng-click=vm.reload() type=button value=reload></md-input-container></div></form>\");\n$templateCache.put(\"app/login/login.html\",\"{{ vm.error }}<form ng-submit=vm.login() name=auth><label>Username: <input type=text ng-model=vm.form.login_name name=login_name required></label><label>Password: <input type=password ng-model=vm.form.password name=password required></label><input type=submit value=Login></form>\");\n$templateCache.put(\"app/main/main.html\",\"\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<md-toolbar layout=row layout-align=\\\"center center\\\"><section flex layout=row layout-align=\\\"left center\\\"><md-button href=#/ class=md-raised>Home</md-button></section><div ng-switch=vm.status.loggedIn><div ng-switch-when=true>Hello {{ vm.status.user.login_name }}</div><div ng-switch-default>login</div></div></md-toolbar>\");\n$templateCache.put(\"app/components/sidenav/sidenav.html\",\"<md-sidenav md-is-locked-open=vm.isOpen class=md-whiteframe-z2><md-list><md-list-item ng-repeat=\\\"device in vm.devices\\\"><md-button ng-click=vm.gotoDevice(device.name)>{{device.name}}</md-button></md-list-item></md-list></md-sidenav>\");}]);"],"sourceRoot":"/source/"}